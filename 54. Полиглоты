// java
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;
public class Main {

    /*
	Для чтения входных данных необходимо получить их
	из стандартного потока ввода (System.in).
	Данные во входном потоке соответствуют описанному
	в условии формату. Обычно входные данные состоят
	из нескольких строк. Можно использовать более производительные
	и удобные классы BufferedReader, BufferedWriter, Scanner, PrintWriter.

	С помощью BufferedReader можно прочитать из стандартного потока:
	* строку -- reader.readLine()
	* число -- int n = Integer.parseInt(reader.readLine());
	* массив чисел известной длины (во входном потоке каждое число на новой строке) --
	int[] nums = new int[len];
    for (int i = 0; i < len; i++) {
        nums[i] = Integer.parseInt(reader.readLine());
    }
	* последовательность слов в строке --
	String[] parts = reader.readLine().split(" ");

	Чтобы вывести результат в стандартный поток вывода (System.out),
	Через BufferedWriter можно использовать методы
	writer.write("Строка"), writer.write('A') и writer.newLine().

	Возможное решение задачи "Вычислите сумму чисел в строке":
	int sum = 0;
    String[] parts = reader.readLine().split(" ");
    for (int i = 0; i < parts.length; i++) {
        int num = Integer.parseInt(parts[i]);
        sum += num;
    }
    writer.write(String.valueOf(sum));
	*/
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        int numStudents = Integer.parseInt(reader.readLine());
        String line;
        Map<String, Integer> languages = new HashMap<>();
        while((line = reader.readLine()) != null) {
            try {
                int skipLine = Integer.parseInt(line);
            } catch(NumberFormatException notUsed) {
                languages.put(line, languages.getOrDefault(line, 0) + 1);
            }
        }
        
        /*
        Map<String, Integer> sortedMap = languages.entrySet()
                 .stream()
                 .sorted(Map.Entry.comparingByKey())
                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (newValue, oldValue) -> oldValue, LinkedHashMap::new));*/

        List<String> allKnow = new ArrayList();
        List<String> atLeastOne = new ArrayList();
        languages.forEach((key, val) -> {
            if(val == numStudents) {
                allKnow.add(key);
                atLeastOne.add(key);
            } else {
                atLeastOne.add(key);
            }
        });
        writer.write(String.valueOf(allKnow.size()));
        writer.write("\n");
        writer.write(allKnow.stream().map(String::valueOf).collect(Collectors.joining("\n")));
        writer.write("\n");
        writer.write(String.valueOf(atLeastOne.size()));
        writer.write("\n");
        writer.write(atLeastOne.stream().map(String::valueOf).collect(Collectors.joining("\n")));
        reader.close();
        writer.close();
    }

}



### python
import sys


def main():
    """
    Для чтения входных данных необходимо получить их
    из стандартного потока ввода (sys.stdin).
    Данные во входном потоке соответствуют описанному
    в условии формату. Обычно входные данные состоят
    из нескольких строк.
    Можно использовать несколько методов:
    * input() -- читает одну строку из потока без символа
    перевода строки;
    * sys.stdin.readline() -- читает одну строку из потока,
    сохраняя символ перевода строки в конце;
    * sys.stdin.readlines() -- вернет список (list) строк,
    сохраняя символ перевода строки в конце каждой из них.
    Чтобы прочитать из строки стандартного потока:
    * число -- int(input()) # в строке должно быть одно число
    * строку -- input()
    * массив чисел -- map(int, input().split())
    * последовательность слов -- input().split()
    Чтобы вывести результат в стандартный поток вывода (sys.stdout),
    можно использовать функцию print() или sys.stdout.write().
    Возможное решение задачи "Вычислите сумму чисел в строке":
    print(sum(map(int, input().split())))
    """
    input = []
    languages = {}
    
    for line in sys.stdin:
        input.append(line.rstrip("\n"))
    
    numStudents = int(input[0])
    studentId = 0
    
    for idx in range(1, len(input)):
        value = input[idx]
        if not value.isnumeric():
            languages[value] = languages.get(value, 0) + 1
    
    everyone = []
    onlySome = []
    
    for key, val in languages.items():
        if val == numStudents:
            everyone.append(key)
        onlySome.append(key)
    
    sys.stdout.write(str(len(everyone)) + "\n")
    sys.stdout.write("\n".join(everyone) + "\n")
    sys.stdout.write(str(len(onlySome)) + "\n")
    sys.stdout.write("\n".join(onlySome))
            

    

if __name__ == '__main__':
    main()
